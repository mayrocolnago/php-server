<VirtualHost *:80>
    ServerAlias *.*
    VirtualDocumentRoot /var/www/html/%1
    UseCanonicalName Off
    <Directory "/var/www/html/">
        Options FollowSymLinks
        AllowOverride All
        Order allow,deny
        Allow from all
    </Directory>
</VirtualHost>


# DNS certbot command
# docker exec -it $(docker ps -f "name=phpws" -n 1 --format "{{.ID}}") /bin/bash -c "certbot --server https://acme-v02.api.letsencrypt.org/directory -d *.domain.com --manual --preferred-challenges dns-01 certonly"



# HTTPS Module example

# <IfModule mod_ssl.c>
#     <VirtualHost *:443>
#         SSLEngine on

#         SSLProtocol             all -SSLv2 -SSLv3
#         SSLCipherSuite          ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
#         SSLHonorCipherOrder     on
#         SSLCompression          off
#         SSLOptions +StrictRequire

#         SSLCertificateFile /var/www/bin/certs/live/selfsigned/fullchain.pem
#         SSLCertificateKeyFile /var/www/bin/certs/live/selfsigned/privkey.pem
#     </VirtualHost>
# </IfModule>

# Delete this wildcard file if you are going production with a specific domain holding
# If you are looking for a higher ssl directive, you may try the certonly option (certonly -w /path/project -d...) or cloudflare certs
